{"ast":null,"code":"import { SET_CURRENT_USER, USER_LOADING, GET_ERRORS } from \"./types\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport const registerUser = userData => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(() => {\n    console.log(\"success\");\n    history.push(\"/login\");\n  }) // re-direct to login on successful register\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err\n  }));\n}; // Login - get user token\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"http://localhost:3000/api/users/login\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n    history.push(\"/dashboard\");\n    window.location.href = \"./dashboard\";\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err\n  }));\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  window.location.href = \"./login\";\n};","map":{"version":3,"sources":["/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/BLOOMBANK-BANKING-WEB-APP/client/src/actions/authActions.js"],"names":["SET_CURRENT_USER","USER_LOADING","GET_ERRORS","axios","jwt_decode","setAuthToken","createBrowserHistory","history","registerUser","userData","dispatch","post","then","console","log","push","catch","err","type","payload","loginUser","res","token","data","localStorage","setItem","decoded","setCurrentUser","window","location","href","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,YAA1B,EAAwCC,UAAxC,QAAyD,SAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,MAAMC,OAAO,GAAGD,oBAAoB,EAApC;AAKA,OAAO,MAAME,YAAY,GAAIC,QAAD,IAAcC,QAAQ,IAAI;AAElDP,EAAAA,KAAK,CAACQ,IAAN,CAAW,qBAAX,EAAkCF,QAAlC,EACGG,IADH,CACQ,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAP,IAAAA,OAAO,CAACQ,IAAR,CAAa,QAAb;AACD,GAJH,EAIK;AAJL,GAKGC,KALH,CAKSC,GAAG,IACRP,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEhB,UADC;AAEPiB,IAAAA,OAAO,EAAEF;AAFF,GAAD,CANZ;AAWD,CAbI,C,CAeL;;AACA,OAAO,MAAMG,SAAS,GAAGX,QAAQ,IAAIC,QAAQ,IAAI;AAC/CP,EAAAA,KAAK,CAACQ,IAAN,CAAW,uCAAX,EAAoDF,QAApD,EACGG,IADH,CACQS,GAAG,IAAI;AACX;AACN;AACM,UAAM;AAAEC,MAAAA;AAAF,QAAYD,GAAG,CAACE,IAAtB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC,EAJW,CAKX;;AACAjB,IAAAA,YAAY,CAACiB,KAAD,CAAZ,CANW,CAOX;;AACA,UAAMI,OAAO,GAAGtB,UAAU,CAACkB,KAAD,CAA1B,CARW,CASX;;AACAZ,IAAAA,QAAQ,CAACiB,cAAc,CAACD,OAAD,CAAf,CAAR;AACAnB,IAAAA,OAAO,CAACQ,IAAR,CAAa,YAAb;AACAa,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAvB;AAA4C,GAbhD,EAcGd,KAdH,CAcSC,GAAG,IACRP,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEhB,UADC;AAEPiB,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAfZ;AAoBD,CArBM;AAuBT,OAAO,MAAMU,cAAc,GAAGD,OAAO,IAAI;AACjC,SAAO;AACHR,IAAAA,IAAI,EAAElB,gBADH;AAEHmB,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALE;AAON,OAAO,MAAMK,cAAc,GAAG,MAAM;AAC7B,SAAO;AACHb,IAAAA,IAAI,EAAEjB;AADH,GAAP;AAGH,CAJG;AAMR,OAAO,MAAM+B,UAAU,GAAG,MAAMtB,QAAQ,IAAI;AACpCc,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACA5B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,EAAAA,QAAQ,CAACiB,cAAc,CAAC,EAAD,CAAf,CAAR;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AAEH,CANE","sourcesContent":["import {SET_CURRENT_USER, USER_LOADING, GET_ERRORS} from \"./types\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\n\n\n\nexport const registerUser = (userData) => dispatch => {\n\n    axios.post(\"/api/users/register\", userData)\n      .then(() => {\n        console.log(\"success\");\n        history.push(\"/login\");\n      }) // re-direct to login on successful register\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\n  // Login - get user token\n  export const loginUser = userData => dispatch => {\n    axios.post(\"http://localhost:3000/api/users/login\", userData)\n      .then(res => {\n        // Save to localStorage\n  // Set token to localStorage\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\", token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n        history.push(\"/dashboard\");\n        window.location.href = \"./dashboard\";      })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\nexport const setCurrentUser = decoded => {\n        return {\n            type: SET_CURRENT_USER,\n            payload: decoded\n        }\n    };\n\n export const setUserLoading = () => {\n        return {\n            type: USER_LOADING\n        };\n    };\n\nexport const logoutUser = () => dispatch => {\n        localStorage.removeItem(\"jwtToken\");\n        setAuthToken(false);\n        dispatch(setCurrentUser({}))\n        window.location.href = \"./login\";\n        \n    };\n\n\n"]},"metadata":{},"sourceType":"module"}